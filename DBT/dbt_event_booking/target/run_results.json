{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.4", "generated_at": "2025-03-14T13:53:49.322800Z", "invocation_id": "ede45c7d-69ba-45d3-b8e6-68b7ef30d8c2", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.096768Z", "completed_at": "2025-03-14T13:53:49.098855Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.098855Z", "completed_at": "2025-03-14T13:53:49.098855Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.04022049903869629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.stg_customers", "compiled": true, "compiled_code": "-- This model a staging model that is used to remove null values from the customers table\nWITH remove_null_values_in_customer_cte AS (\n    SELECT\n        *\n    FROM\n        EVENT_BOOKING.RAW.CUSTOMERS\n    WHERE \n        customer_id IS NOT NULL\n),\n-- This CTE is used to remove duplicates from the customers table\nremove_duplicates_in_customer_cte AS (\n    SELECT\n        DISTINCT *\n    FROM\n        remove_null_values_in_customer_cte\n)\nSELECT \n    TRIM(CAST(customer_id AS INT)) AS customer_id,  -- Casting the customer_id as INT\n    TRIM(customername) AS customer_name,\n    TRIM(company) AS company\nFROM    \n    remove_duplicates_in_customer_cte", "relation_name": "EVENT_BOOKING.staging.stg_customers"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.098855Z", "completed_at": "2025-03-14T13:53:49.114484Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.117601Z", "completed_at": "2025-03-14T13:53:49.117601Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.04537081718444824, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.stg_products", "compiled": true, "compiled_code": "-- This model a staging model that is used to remove null values from the products table\nWITH remove_null_values_in_product_cte AS (\n    SELECT\n        DISTINCT *\n    FROM\n        EVENT_BOOKING.RAW.PRODUCTS\n    WHERE \n        product_id IS NOT NULL\n),\ntrim_values_in_product_cte AS (\n    SELECT \n        TRIM(product_id) AS product_id,  -- Casting the product_id as INT\n        TRIM(product_family) AS product_family,\n        TRIM(product_sub_family) AS product_sub_family\n    FROM\n        remove_null_values_in_product_cte\n)\nSELECT \n    *\nFROM\n    trim_values_in_product_cte", "relation_name": "EVENT_BOOKING.staging.stg_products"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.075842Z", "completed_at": "2025-03-14T13:53:49.119219Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.121213Z", "completed_at": "2025-03-14T13:53:49.121213Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04537081718444824, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.stg_countries", "compiled": true, "compiled_code": "-- CTE to remove null values in countries\nWITH remove_null_values_in_countries_cte AS (\n    SELECT\n        customer_id,\n        country,\n        region\n    FROM\n        EVENT_BOOKING.RAW.COUNTRIES\n    WHERE \n        customer_id IS NOT NULL\n),\ndistinct_values_in_countries_cte AS (\n    SELECT\n        DISTINCT *\n    FROM\n        remove_null_values_in_countries_cte\n)\nSELECT \n    TRIM(CAST(customer_id AS INT)) AS customer_id,  -- Casting the customer_id as INT\n    TRIM(country) AS country,\n    TRIM(region) AS region\nFROM  \n    distinct_values_in_countries_cte", "relation_name": "EVENT_BOOKING.staging.stg_countries"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.098855Z", "completed_at": "2025-03-14T13:53:49.120215Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.121213Z", "completed_at": "2025-03-14T13:53:49.121213Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.04537081718444824, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.stg_transactions", "compiled": true, "compiled_code": "-- This model is a staging model that is used to remove null values from the transactions table\n-- This cte is used to remove null values from the transactions table\nWITH remove_null_values_in_transaction_cte AS (\n    SELECT\n        customer_id,\n        product_id,\n        payment_month,\n        revenue_type,\n        revenue,\n        quantity,\n        companies,\n        dimension_1,\n        dimension_2,\n        dimension_3,\n        dimension_4,\n        dimension_5,\n        dimension_6,\n        dimension_7,\n        dimension_8,\n        dimension_9,\n        dimension_10\n    FROM\n        EVENT_BOOKING.RAW.TRANSACTIONS\n    WHERE \n        customer_id IS NOT NULL\n        AND product_id IS NOT NULL\n),\nremove_duplicates_in_transaction_cte AS (\n    SELECT\n        DISTINCT *\n    FROM\n        remove_null_values_in_transaction_cte\n),\n-- this cte is used to cast the columns to the correct data types\ncast_columns_in_transaction_cte AS (\n    SELECT \n        TRIM(CAST(customer_id AS INT)) AS customer_id,\n        TRIM(product_id) AS product_id,\n        TO_DATE(payment_month, 'MM/DD/YYYY') AS payment_month,\n        TRIM(CAST(quantity AS INT)) AS quantity,\n        TRIM(CAST(revenue AS FLOAT)) AS revenue,\n        TRIM(CAST(revenue_type AS INT)) AS revenue_type,\n        TRIM(companies) AS companies,\n        TRIM(dimension_1) AS dimension_1,\n        TRIM(dimension_2) AS dimension_2,\n        TRIM(dimension_3) AS dimension_3,\n        TRIM(dimension_4) AS dimension_4,\n        TRIM(dimension_5) AS dimension_5,\n        TRIM(dimension_6) AS dimension_6,\n        TRIM(dimension_7) AS dimension_7,\n        TRIM(dimension_8) AS dimension_8,\n        TRIM(dimension_9) AS dimension_9,\n        TRIM(dimension_10) AS dimension_10\n    FROM    \n        remove_duplicates_in_transaction_cte\n)\nSELECT  \n    *\nFROM \n    cast_columns_in_transaction_cte", "relation_name": "EVENT_BOOKING.staging.stg_transactions"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.121213Z", "completed_at": "2025-03-14T13:53:49.121213Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.130824Z", "completed_at": "2025-03-14T13:53:49.130824Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010980606079101562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.dbt_event_booking.countries", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.141231Z", "completed_at": "2025-03-14T13:53:49.154964Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.158966Z", "completed_at": "2025-03-14T13:53:49.158966Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02980327606201172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.int_customer_cross_sell", "compiled": true, "compiled_code": "WITH product_counts AS (\n    SELECT \n        CUSTOMER_ID,\n        COUNT(DISTINCT PRODUCT_ID) AS total_products,\n        COUNT(DISTINCT CASE WHEN PAYMENT_MONTH < DATEADD(month, -3, '2020-06-01') THEN PRODUCT_ID END) AS churned_products\n    FROM \n        EVENT_BOOKING.staging.stg_transactions\n    GROUP BY \n        CUSTOMER_ID\n)\nSELECT \n    CUSTOMER_ID,\n    customer_name,\n    total_products,\n    churned_products,\n    (total_products - churned_products) AS current_cross_sell,\n    DENSE_RANK() OVER (ORDER BY (total_products - churned_products) DESC) AS customer_rank\nFROM \n    product_counts\n    INNER JOIN\n    EVENT_BOOKING.staging.stg_customers\n    USING (CUSTOMER_ID)\nORDER BY \n    current_cross_sell DESC", "relation_name": "EVENT_BOOKING.intermediate.int_customer_cross_sell"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.132193Z", "completed_at": "2025-03-14T13:53:49.155965Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.159969Z", "completed_at": "2025-03-14T13:53:49.159969Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.030771493911743164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.int_countries", "compiled": true, "compiled_code": "SELECT  \n    *\nFROM    \n    EVENT_BOOKING.staging.stg_countries", "relation_name": "EVENT_BOOKING.intermediate.int_countries"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.141231Z", "completed_at": "2025-03-14T13:53:49.157965Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.164488Z", "completed_at": "2025-03-14T13:53:49.164488Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03437089920043945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.int_consolidated_tables", "compiled": true, "compiled_code": "SELECT  \n    DISTINCT *\nFROM\n    EVENT_BOOKING.staging.stg_customers\n    inner join\n    EVENT_BOOKING.staging.stg_countries\n    using (customer_id)\n    inner join\n    EVENT_BOOKING.staging.stg_transactions\n    using (customer_id)    \n    inner join\n    EVENT_BOOKING.staging.stg_products\n    using (product_id)", "relation_name": "EVENT_BOOKING.intermediate.int_consolidated_tables"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.148506Z", "completed_at": "2025-03-14T13:53:49.159969Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.165565Z", "completed_at": "2025-03-14T13:53:49.165565Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.028303146362304688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.int_customer_status", "compiled": true, "compiled_code": "with first_last_order_dates as (\n    select\n        customer_id\n        ,min(payment_month) as first_order_date\n        ,max(payment_month) as last_order_date\n    from EVENT_BOOKING.staging.stg_transactions\n    group by customer_id\n),\nmin_order_date as (\n    select\n        min(payment_month) as min_order_date\n        from EVENT_BOOKING.staging.stg_transactions\n),\nmax_order_date as (\n    select\n        max(payment_month) as max_order_date\n        from EVENT_BOOKING.staging.stg_transactions\n),\ncustomer_analysis as(\n    select\n        customer_id\n        , first_order_date\n        , last_order_date\n        , case\n            when last_order_date <= dateadd(month, -12, (select max_order_date from max_order_date)) then 'Churned Customer'\n            when first_order_date >= dateadd(month, 12, (select min_order_date from min_order_date)) then 'New Customer'\n            else 'Active Customer'\n        end as customer_status\n    from  first_last_order_dates\n)\nselect\n    *\n    from customer_analysis", "relation_name": "EVENT_BOOKING.intermediate.int_customer_status"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.172567Z", "completed_at": "2025-03-14T13:53:49.181627Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.181627Z", "completed_at": "2025-03-14T13:53:49.181627Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014062881469726562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.int_new_customers_and_churned", "compiled": true, "compiled_code": "WITH customer_status AS (\n    SELECT \n        CUSTOMER_ID,\n        MIN(PAYMENT_MONTH) AS first_purchase_date,\n        MAX(PAYMENT_MONTH) AS last_purchase_date,\n        rank\n    FROM \n        EVENT_BOOKING.staging.stg_transactions\n    GROUP BY \n        CUSTOMER_ID\n)\nSELECT \n    DATE_TRUNC('month', first_purchase_date) AS month,\n    COUNT(CASE \n            WHEN last_purchase_date < DATEADD(month, -12, '2020-06-01') \n            THEN CUSTOMER_ID \n          END) AS churned_customers,\n    COUNT(CASE \n            WHEN first_purchase_date >= DATEADD(month, -12, '2020-06-01') \n            THEN CUSTOMER_ID \n          END) AS new_customers\nFROM \n    customer_status\nGROUP BY \n    month\nORDER BY \n    month", "relation_name": "EVENT_BOOKING.intermediate.int_new_customers_and_churned"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.175568Z", "completed_at": "2025-03-14T13:53:49.181627Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.181627Z", "completed_at": "2025-03-14T13:53:49.181627Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.028692960739135742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.int_new_customers_in_each_fiscal_year", "compiled": true, "compiled_code": "WITH new_customers_cte AS (\n    SELECT \n        CUSTOMER_ID,\n        DATE_TRUNC('year', MIN(PAYMENT_MONTH)) AS fiscal_year\n    FROM \n        EVENT_BOOKING.staging.stg_transactions\n    GROUP BY \n        CUSTOMER_ID\n)\nSELECT \n    fiscal_year,\n    COUNT(CUSTOMER_ID) AS new_customers\nFROM \n    new_customers_cte\nGROUP BY \n    fiscal_year\nORDER BY \n    fiscal_year", "relation_name": "EVENT_BOOKING.intermediate.int_new_customers_in_each_fiscal_year"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.181627Z", "completed_at": "2025-03-14T13:53:49.181627Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.197260Z", "completed_at": "2025-03-14T13:53:49.197260Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.015632152557373047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.int_rank_products_on_revenue", "compiled": true, "compiled_code": "WITH rank_products_cte AS (\n    SELECT \n        product_id,\n        product_family,\n        COUNT(revenue) AS total_transactions,\n        ROUND(SUM(revenue), 2) AS total_revenue,\n        DENSE_RANK() OVER (ORDER BY SUM(revenue) DESC) AS product_rank\n    FROM \n        EVENT_BOOKING.staging.stg_transactions\n        INNER JOIN\n        EVENT_BOOKING.staging.stg_products\n        USING (product_id)\n    GROUP BY \n        product_id, product_family\n    ORDER BY \n        total_revenue DESC\n)\nSELECT \n    *\nFROM    \n    rank_products_cte", "relation_name": "EVENT_BOOKING.intermediate.int_rank_products_on_revenue"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.180565Z", "completed_at": "2025-03-14T13:53:49.181627Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.197260Z", "completed_at": "2025-03-14T13:53:49.197260Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.024692535400390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.int_nrr_grr", "compiled": true, "compiled_code": "with prev as (\n    select\n        customer_id,\n        revenue,\n        lag(revenue) over (partition by customer_id order by PAYMENT_MONTH) as previous_revenue\n    from EVENT_BOOKING.staging.stg_transactions\n),\ntransactions AS (\n SELECT\n        customer_id,\n        SUM(revenue) AS total_revenue,  \n        sum(previous_revenue) as prev_total_revenue,\n        CASE WHEN total_revenue > prev_total_revenue THEN total_revenue-prev_total_revenue ELSE 0 END AS expansion_revenue,  \n        CASE WHEN total_revenue < prev_total_revenue THEN prev_total_revenue-total_revenue ELSE 0 END AS contraction_revenue  \n    FROM prev\n    GROUP BY 1\n)\nSELECT\n    customer_id,\n    total_revenue,\n    prev_total_revenue,\n    expansion_revenue,\n    contraction_revenue,\n    CASE\n        WHEN total_revenue = 0 THEN 0\n        ELSE (((total_revenue)+(expansion_revenue - contraction_revenue)) / total_revenue)*100\n    END AS net_revenue_retention_in_percentage,\n    CASE\n        WHEN total_revenue = 0 THEN 0\n        ELSE (((total_revenue)-(expansion_revenue - contraction_revenue)) / total_revenue)*100\n    END AS gross_revenue_retention_in_percentage\nFROM transactions", "relation_name": "EVENT_BOOKING.intermediate.int_nrr_grr"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.181627Z", "completed_at": "2025-03-14T13:53:49.197260Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.197260Z", "completed_at": "2025-03-14T13:53:49.197260Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01872539520263672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.int_rank_customers_on_revenue", "compiled": true, "compiled_code": "WITH joined_customers_with_transactions_cte AS (\n    SELECT \n        customer_id,\n        customer_name,\n        revenue,\n        revenue_type\n    FROM\n        EVENT_BOOKING.staging.stg_transactions \n        INNER JOIN\n        EVENT_BOOKING.staging.stg_customers \n        USING (customer_id)\n)\nSELECT\n    customer_id,\n    customer_name,\n    COUNT(revenue) AS total_transactions,\n    ROUND(sum(revenue),2) AS total_revenue,\n    DENSE_RANK() OVER(ORDER BY SUM(revenue) DESC) AS top_customers\nFROM\n    joined_customers_with_transactions_cte\nWHERE\n    revenue_type = 1\nGROUP BY\n    customer_id, customer_name\nORDER BY\n    total_revenue DESC", "relation_name": "EVENT_BOOKING.intermediate.int_rank_customers_on_revenue"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.197260Z", "completed_at": "2025-03-14T13:53:49.212881Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.260343Z", "completed_at": "2025-03-14T13:53:49.260343Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.06308317184448242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.int_revenue_contraction", "compiled": true, "compiled_code": "WITH revenue_data AS (\n    SELECT\n        customer_id,\n        revenue,\n        payment_month AS date,\n        EXTRACT(YEAR FROM payment_month) AS year,\n        EXTRACT(MONTH FROM payment_month) AS month\n    FROM\n        EVENT_BOOKING.staging.stg_transactions\n),\ncontraction_data AS (\n    SELECT\n        customer_id,\n        LAG(revenue) OVER (PARTITION BY customer_id ORDER BY date) AS previous_revenue,\n        revenue,\n        date,\n        year,\n        month\n    FROM\n        revenue_data\n)\nSELECT\n    customer_id,\n    customer_name,\n    year,\n    month,\n    MAX(previous_revenue) AS previous_revenue,\n    MAX(revenue) AS revenue,\n    SUM(CASE\n        WHEN previous_revenue > revenue THEN ROUND(previous_revenue - revenue,2)        \n        WHEN previous_revenue = revenue THEN 0\n        ELSE 0\n    END) AS revenue_lost\nFROM\n    contraction_data\n    INNER JOIN\n    EVENT_BOOKING.staging.stg_customers\n    USING (customer_id)\nGROUP BY\n    customer_id,\n    customer_name,\n    month,\n    year\nORDER BY\n    customer_id,\n    year,\n    month;", "relation_name": "EVENT_BOOKING.intermediate.int_revenue_contraction"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.212881Z", "completed_at": "2025-03-14T13:53:49.275923Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.275923Z", "completed_at": "2025-03-14T13:53:49.275923Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.07866358757019043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.mart_cross_sell_analysis", "compiled": true, "compiled_code": "SELECT \n    *\nFROM \n    EVENT_BOOKING.intermediate.int_customer_cross_sell\nWHERE\n    current_cross_sell > 0", "relation_name": "EVENT_BOOKING.mart.mart_cross_sell_analysis"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.260343Z", "completed_at": "2025-03-14T13:53:49.275923Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.275923Z", "completed_at": "2025-03-14T13:53:49.275923Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.06304240226745605, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.mart_new_logos", "compiled": true, "compiled_code": "SELECT\n    EXTRACT(YEAR FROM fiscal_year) AS year,\n    new_customers\nFROM\n    EVENT_BOOKING.intermediate.int_new_customers_in_each_fiscal_year", "relation_name": "EVENT_BOOKING.mart.mart_new_logos"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.212881Z", "completed_at": "2025-03-14T13:53:49.275923Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.275923Z", "completed_at": "2025-03-14T13:53:49.275923Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06304240226745605, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.mart_customer_analysis", "compiled": true, "compiled_code": "SELECT \n    EXTRACT(YEAR FROM last_order_date) AS year,\n    COUNT(CASE\n            WHEN customer_status = 'Churned Customer' THEN customer_id\n        END) AS churned_customers,\n    COUNT(CASE\n            WHEN customer_status = 'Active Customer' THEN customer_id\n        END) AS active_customers,\n    COUNT(CASE\n            WHEN customer_status = 'New Customer' THEN customer_id\n        END) AS new_customers\nFROM\n    EVENT_BOOKING.intermediate.int_customer_status\nGROUP BY\n    year\nORDER BY\n    year DESC", "relation_name": "EVENT_BOOKING.mart.mart_customer_analysis"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.260343Z", "completed_at": "2025-03-14T13:53:49.275923Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.275923Z", "completed_at": "2025-03-14T13:53:49.275923Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015580415725708008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.mart_products_analysis", "compiled": true, "compiled_code": "SELECT\n    *\nFROM\n    EVENT_BOOKING.intermediate.int_rank_products_on_revenue", "relation_name": "EVENT_BOOKING.mart.mart_products_analysis"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.291549Z", "completed_at": "2025-03-14T13:53:49.291549Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.307176Z", "completed_at": "2025-03-14T13:53:49.307176Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.031252384185791016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.mart_nrr_grr", "compiled": true, "compiled_code": "SELECT\n    *\nFROM\n    EVENT_BOOKING.intermediate.int_nrr_grr", "relation_name": "EVENT_BOOKING.mart.mart_nrr_grr"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.291549Z", "completed_at": "2025-03-14T13:53:49.307176Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.307176Z", "completed_at": "2025-03-14T13:53:49.307176Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01562643051147461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.mart_top_customers", "compiled": true, "compiled_code": "SELECT\n    DISTINCT customer_id,\n    customer_name,\n    total_transactions,\n    total_revenue,\n    top_customers,\n    country\nFROM\n    EVENT_BOOKING.intermediate.int_rank_customers_on_revenue\n    INNER JOIN\n    EVENT_BOOKING.intermediate.int_countries\n    USING (customer_id)", "relation_name": "EVENT_BOOKING.mart.mart_top_customers"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.291549Z", "completed_at": "2025-03-14T13:53:49.307176Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.307176Z", "completed_at": "2025-03-14T13:53:49.307176Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01562643051147461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.mart_revenue_contraction", "compiled": true, "compiled_code": "SELECT\n    *\nFROM\n    EVENT_BOOKING.intermediate.int_revenue_contraction", "relation_name": "EVENT_BOOKING.mart.mart_revenue_contraction"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-03-14T13:53:49.291549Z", "completed_at": "2025-03-14T13:53:49.307176Z"}, {"name": "execute", "started_at": "2025-03-14T13:53:49.307176Z", "completed_at": "2025-03-14T13:53:49.307176Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01562643051147461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.dbt_event_booking.event_booking_cube", "compiled": true, "compiled_code": "SELECT\n    *\nFROM\n    EVENT_BOOKING.mart.mart_cross_sell_analysis\n    INNER JOIN EVENT_BOOKING.mart.mart_products_analysis\n    HAVING", "relation_name": "EVENT_BOOKING.STAGING.event_booking_cube"}], "elapsed_time": 4.807787179946899, "args": {"printer_width": 80, "use_colors": true, "vars": {}, "static": false, "send_anonymous_usage_stats": true, "which": "generate", "log_level": "info", "partial_parse": true, "log_format": "default", "use_colors_file": true, "log_file_max_bytes": 10485760, "partial_parse_file_diff": true, "defer": false, "log_path": "C:\\Users\\AakashMV\\OneDrive - JMAN Group Ltd\\Desktop\\dbt\\dbt_event_booking\\logs", "empty_catalog": false, "macro_debugging": false, "populate_cache": true, "write_json": true, "strict_mode": false, "introspect": true, "enable_legacy_logger": false, "static_parser": true, "print": true, "select": [], "warn_error_options": {"include": [], "exclude": []}, "project_dir": "C:\\Users\\AakashMV\\OneDrive - JMAN Group Ltd\\Desktop\\dbt\\dbt_event_booking", "invocation_command": "dbt docs generate", "compile": true, "indirect_selection": "eager", "quiet": false, "show_resource_report": false, "log_format_file": "debug", "favor_state": false, "log_level_file": "debug", "version_check": true, "exclude": [], "cache_selected_only": false, "profiles_dir": "C:\\Users\\AakashMV\\.dbt"}}